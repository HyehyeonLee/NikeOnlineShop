/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-09-11 10:05:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.BulletinBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.nike.dto.*;

public final class boards_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1598509295432L));
    _jspx_dependants.put("jar:file:/C:/apache-tomcat-8.5.57/wtpwebapps/nike/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.nike.dto");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

ArrayList <BoardDTO> boardList = (ArrayList<BoardDTO>) (request.getAttribute("list"));
int totalRowCount = ((Integer) request.getAttribute("totalRowCount")).intValue();
int currentPage = ((Integer) request.getAttribute("page")).intValue();
int maxPage = ((Integer) request.getAttribute("maxPage")).intValue();
int startPage = ((Integer) request.getAttribute("startPage")).intValue();
int endPage = ((Integer) request.getAttribute("endPage")).intValue();
//int boardNumber = ((Integer) request.getAttribute("boardNumber")).intValue();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("   href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\r\n");
      out.write("   \r\n");
      out.write("<style>\r\n");
      out.write("   .login-wrap{\r\n");
      out.write("      text-align:center;\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   .body{\r\n");
      out.write("      text-align:center;\r\n");
      out.write("   }\r\n");
      out.write("   .login-wrap .header-login{\r\n");
      out.write("      margin-bottom:40px;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("</style>   \r\n");
      out.write("   \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <div class = \"login-wrap\">\r\n");
      out.write("         <div class = \"header-login\">\r\n");
      out.write("            <span class = \"logo\">\r\n");
      out.write("               <a href=\"NikeactionController?command=result_page\"><img src=\".././images/logo.png\"/></a>\r\n");
      out.write("            </span><br/><br/>\r\n");
      out.write("            <h2 class = \"title\">나이키 회원 게시판</h2>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("   <table class=\"table table-striped table-bordered table-hover\">\r\n");
      out.write("      <thead>\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th>게시글번호</th>\r\n");
      out.write("            <th>제목</th>\r\n");
      out.write("            <th>내용</th>\r\n");
      out.write("            <th>저자</th>\r\n");
      out.write("            <th>게시일</th>\r\n");
      out.write("            <th>조회수</th>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </thead>\r\n");
      out.write("      <tbody>\r\n");
      out.write("         <!-- 이자리였어요 -->\r\n");
      out.write("            ");
for(int i = 0; i < boardList.size();i++){
               BoardDTO dto = boardList.get(i);
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>");
      out.print(dto.getBoardNumber() );
      out.write("</td> <!-- 게시글 번호 -->\r\n");
      out.write("               \r\n");
      out.write("               <td>\r\n");
      out.write("                  <div style = \"align-content: flex-start;\">\r\n");
      out.write("                     ");
 if(dto.getLevel()!=0){
      out.write("\r\n");
      out.write("                     ");
 for(int a = 0; a <= dto.getLevel()*2;a++){ 
      out.write("\r\n");
      out.write("                        &nbsp;\r\n");
      out.write("                     ");
 } 
      out.write("\r\n");
      out.write("                     ");
} else {
      out.write("\r\n");
      out.write("                     ");
 }
      out.write("\r\n");
      out.write("                     <a href=\"NikeBulletinBoardController?command=boardNumber&boardNumber=");
      out.print(dto.getBoardNumber());
      out.write('"');
      out.write('>');
      out.print(dto.getTitle() );
      out.write("</a>\r\n");
      out.write("                  </div>\r\n");
      out.write("               </td>\r\n");
      out.write("               \r\n");
      out.write("               <!-- 컨틀롤러 -->\r\n");
      out.write("               <td>");
      out.print(dto.getTitle() );
      out.write("</td>\r\n");
      out.write("               <td>");
      out.print(dto.getWriter() );
      out.write("</td>\r\n");
      out.write("               <td>");
      out.print(dto.getDate() );
      out.write("</td>\r\n");
      out.write("               <td>");
      out.print(dto.getHitcount() );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("         <!-- 이자리였어요 -->\r\n");
      out.write("         <tr align=\"center\">\r\n");
      out.write("            <td colspan='7'>\r\n");
      out.write("               ");

                  if(currentPage >= 10){
               
      out.write("\r\n");
      out.write("                  <a href=\"NikeBulletinBoardController?command=pageview&currentPage=");
      out.print(currentPage-10);
      out.write("\">[이전페이지]</a>               \r\n");
      out.write("               ");
      
                  }
               //endPage
               for (int a = startPage; a <= endPage; a++) {
                  if (a == currentPage) {
               
      out.write(' ');
      out.write('[');
      out.print(a);
      out.write(']');
      out.write(' ');

                  } else {
               
      out.write(" <a href=\"NikeBulletinBoardController?command=pageview&currentPage=");
      out.print(a);
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(a);
      out.write("]</a>\r\n");
      out.write("               ");

                      }
                   }
                if(currentPage != maxPage){
                
      out.write("\r\n");
      out.write("                   <a href=\"NikeBulletinBoardController?command=pageview&currentPage=");
      out.print(currentPage+10);
      out.write("\">[다음페이지]</a>\r\n");
      out.write("                ");
      
                }
               
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </tbody>\r\n");
      out.write("   </table>\r\n");
      out.write("\r\n");
      out.write("   <div>\r\n");
      out.write("      <a href=\"BulletinBoard/Write.jsp\">게시글 입력</a> \r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
